package week_six;

import java.util.stream.Collectors;

/**
 * Background
 * Deoxyribonucleic acid (DNA) is a chemical found in the nucleus of cells and carries the "instructions" for the development and functioning of living organisms.
 *
 * If you want to know more http://en.wikipedia.org/wiki/DNA
 *
 * DNA is created by two strands of nucleotides that are bonded together in complementary pairs. For each base on one side, there is an opposite base on the other side. There are 4 symbols used to represent the bases, A, T, C, and G.
 *
 * Symbols A and T are complements of each other, as are C and G.
 *
 * Task
 * You have function with one side of the DNA, you need to get the other complementary side. The DNA strand may be empty if there is no DNA at all. In this case, you can simple return the empty string.
 *
 * Specification
 * Challenge.dnaComplement(dna)
 * Parameters
 * dna: String - DNA strand
 *
 * Return Value
 * String - A new string generated by returning the complement of the input strand.
 *
 * Constraints
 * It will always be a string, but it might be empty.
 *
 * It will never be null/nil or undefined.
 *
 * Examples
 * dna	Return Value
 * "A"	"T"
 * "T"	"A"
 * "C"	"G"
 * "G"	"C"
 * "ATTGC"	"TAACG"
 * ""	""
 */

public class Monday {

    public static void main(String[] args) {
        System.out.println(dnaComplement("ATTGC"));
    }

    public static String dnaComplement(String dna) {
        var pairs = new java.util.HashMap<Character, Character>();
        pairs.put('C', 'G');
        pairs.put('G', 'C');
        pairs.put('A', 'T');
        pairs.put('T', 'A');
        return dna.chars()
                .mapToObj(i -> (char)i)
                .map(i -> pairs.get(i))
                .map(i -> String.valueOf(i))
                .collect(Collectors.joining());
    }
}
